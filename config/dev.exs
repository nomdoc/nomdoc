import Config

# Configure your database
config :nomdoc, Nomdoc.Repo,
  username: "postgres",
  password: "postgres",
  hostname: "localhost",
  database: "nomdoc_dev",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :nomdoc, NomdocWeb.Endpoint,
  url: [host: "www.nomdoc.net"],
  code_reloader: true,
  debug_errors: true,
  force_watchers: true,
  secret_key_base: "Dd9JYLO/TH8do4EcW5tpx+fKyVvO8A6kzdaOzm1fUAvyO0GsKTzIOkXTJ9OzTF/y",
  watchers: [
    node: ["build.js", "--watch", cd: Path.expand("../assets", __DIR__)],
    tailwind: {Tailwind, :install_and_run, [:default, ~w(--watch)]}
  ]

config :nomdoc, ConsoleWeb.Endpoint,
  url: [host: "console.nomdoc.net"],
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "Dd9JYLO/TH8do4EcW5tpx+fKyVvO8A6kzdaOzm1fUAvyO0GsKTzIOkXTJ9OzTF/y"

config :nomdoc, WorkspaceWeb.Endpoint,
  url: [host: "workspace.nomdoc.net"],
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "Dd9JYLO/TH8do4EcW5tpx+fKyVvO8A6kzdaOzm1fUAvyO0GsKTzIOkXTJ9OzTF/y"

config :nomdoc, HealthcareWeb.Endpoint,
  url: [host: "healthcare.nomdoc.net"],
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "Dd9JYLO/TH8do4EcW5tpx+fKyVvO8A6kzdaOzm1fUAvyO0GsKTzIOkXTJ9OzTF/y"

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :nomdoc, NomdocWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/nomdoc_web/(controllers|live|components)/.*(ex|heex)$"
    ]
  ]

config :nomdoc, ConsoleWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/nomdoc_web/(components)/.*(ex|heex)$",
      ~r"lib/console_web/(controllers|live|components)/.*(ex|heex)$"
    ]
  ]

config :nomdoc, WorkspaceWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/nomdoc_web/(components)/.*(ex|heex)$",
      ~r"lib/workspace_web/(controllers|live|components)/.*(ex|heex)$"
    ]
  ]

config :nomdoc, HealthcareWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/nomdoc_web/(components)/.*(ex|heex)$",
      ~r"lib/healthcare_web/(controllers|live|components)/.*(ex|heex)$"
    ]
  ]

# Configures Nomdoc proxy backends
config :nomdoc, NomdocProxy,
  backends: [
    %{
      # Matches www.nomdoc.net
      host: ~r/^www\.nomdoc\.net$/,
      phoenix_endpoint: NomdocWeb.Endpoint
    },
    %{
      # Matches console.nomdoc.net
      host: ~r/^console\.nomdoc\.net$/,
      phoenix_endpoint: ConsoleWeb.Endpoint
    },
    %{
      # Matches workspace.nomdoc.net
      host: ~r/^workspace\.nomdoc\.net$/,
      phoenix_endpoint: WorkspaceWeb.Endpoint
    },
    %{
      # Matches health.nomdoc.net
      host: ~r/^healthcare\.nomdoc\.net$/,
      phoenix_endpoint: HealthcareWeb.Endpoint
    }
  ]

# Enable dev routes for dashboard and mailbox
config :nomdoc, dev_routes: true

# Configures main_proxy
config :main_proxy,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: 4000]

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

# Include HEEx debug annotations as HTML comments in rendered markup
config :phoenix_live_view, :debug_heex_annotations, true

# Disable swoosh api client as it is only required for production adapters.
config :swoosh, :api_client, false

# Debug `RemoteIp.call/2` and `RemoteIp.from/2`
config :remote_ip, debug: true
